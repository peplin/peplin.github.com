---
layout: post
title: Command-line Build and Deploy to the BUG
permalink: /2011/05/bug-labs-maven-build-and-deploy
---

I recently started a new job, and we're working with the [BUG YT] from
[Bug Labs]. The primary language for BUG apps is Java, and they helpfully
provide libraries for interacting with all of the available hardware modules as
OSGi services.

The recommended development environment is their [Dragonfly SDK], an Eclipse
plugin. It provides shortcuts for creating new BUG applications with the proper
build configuration and ways to deploy to either a physical BUG or a virtual
BUG simulator.

Try as I might, I've never been able to have a positive relationship with
Eclipse - it boils down to the fact that the least important thing in any
workspace view seems to be the code itself. I've paried Eclipse with
[Eclim](http://eclim.org/) so I can code in Vim but take advantage of plugins
like Dragonfly, but the complicated setup is dragging my little work laptop
down.

## Building with Maven

The last few times I had to use Java, I found Maven to be a good command-line
alternative to the build features of Eclipse. I've created a Maven archetype and
a small deploy script that can replicate some of the important features of the
Dragonfly SDK on the command line - no mouse required.

The code for the `bug-archetype` is available on
[GitHub](https://github.com/peplin/buglabs-maven-archetype), where I've also
written up more detailed installation instructions. There's not much to the
archetype itself - the trickiest part was finding an existing OSGi bundle
archetype that fit my needs and adding in the Bug Labs libraries.

This is the first archetype I've made, and I'm a little rusty on the internals
of Maven, so if you have trouble I'd be happy to work through it with you - just
[file an issue](https://github.com/peplin/buglabs-maven-archetype/issues) in
the GitHub project.

[BUG YT]: http://www.buglabs.net/products
[Bug Labs]: http://www.buglabs.net
[Dragonfly SDK]: http://www.buglabs.net/sdk
